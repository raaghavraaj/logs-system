services:
  # Distributor service - routes log packets to analyzers
  distributor:
    build: 
      context: ./distributor
    container_name: logs-distributor
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      # Configurable analyzers - can easily add/remove/modify weights
      - ANALYZERS_CONFIG=analyzer-1:http://analyzer-1:8080/api/v1/analyze:0.1,analyzer-2:http://analyzer-2:8080/api/v1/analyze:0.2,analyzer-3:http://analyzer-3:8080/api/v1/analyze:0.3,analyzer-4:http://analyzer-4:8080/api/v1/analyze:0.4
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    depends_on:
      - analyzer-1
      - analyzer-2
      - analyzer-3
      - analyzer-4
    networks:
      - logs-network

  # Analyzer services - each with different weights
  analyzer-1:
    build: 
      context: ./analyzer
    container_name: logs-analyzer-1
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - ANALYZER_ID=analyzer-1
      - ANALYZER_WEIGHT=0.1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - logs-network

  analyzer-2:
    build: 
      context: ./analyzer
    container_name: logs-analyzer-2
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - ANALYZER_ID=analyzer-2
      - ANALYZER_WEIGHT=0.2
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - logs-network

  analyzer-3:
    build: 
      context: ./analyzer
    container_name: logs-analyzer-3
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - ANALYZER_ID=analyzer-3
      - ANALYZER_WEIGHT=0.3
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - logs-network

  analyzer-4:
    build: 
      context: ./analyzer
    container_name: logs-analyzer-4
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - ANALYZER_ID=analyzer-4
      - ANALYZER_WEIGHT=0.4
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - logs-network

  # Log Emitters - Python scripts that generate and send log packets
  emitter-steady:
    build:
      context: ./emitter
    container_name: logs-emitter-steady
    environment:
      - DISTRIBUTOR_URL=http://distributor:8080/api/v1/distribute
      - AGENT_ID=steady-emitter
      - EMISSION_RATE=50.0
      - EMISSION_MODE=continuous
      - EMISSION_DURATION=0
    depends_on:
      - distributor
    restart: unless-stopped
    networks:
      - logs-network

  emitter-bursty:
    build:
      context: ./emitter
    container_name: logs-emitter-bursty
    environment:
      - DISTRIBUTOR_URL=http://distributor:8080/api/v1/distribute
      - AGENT_ID=bursty-emitter
      - EMISSION_RATE=25.0
      - EMISSION_MODE=continuous
      - EMISSION_DURATION=0
      - BURST_PROBABILITY=0.3
    depends_on:
      - distributor
    restart: unless-stopped
    networks:
      - logs-network

  emitter-heavy:
    build:
      context: ./emitter
    container_name: logs-emitter-heavy
    environment:
      - DISTRIBUTOR_URL=http://distributor:8080/api/v1/distribute
      - AGENT_ID=heavy-load-emitter
      - EMISSION_RATE=100.0
      - EMISSION_MODE=continuous
      - EMISSION_DURATION=0
    depends_on:
      - distributor
    restart: unless-stopped
    networks:
      - logs-network

  emitter-stress:
    build:
      context: ./emitter
    container_name: logs-emitter-stress
    environment:
      - DISTRIBUTOR_URL=http://distributor:8080/api/v1/distribute
      - AGENT_ID=stress-test-emitter
      - EMISSION_RATE=200.0
      - EMISSION_MODE=continuous
      - EMISSION_DURATION=0
      - BURST_PROBABILITY=0.5
    depends_on:
      - distributor
    restart: unless-stopped
    networks:
      - logs-network
    profiles:
      - stress  # Only start with docker-compose --profile stress

networks:
  logs-network:
    driver: bridge
    name: logs-system-network

volumes:
  logs-data:
    name: logs-system-data
